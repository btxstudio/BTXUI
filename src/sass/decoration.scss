.bg-repeat {
    background-repeat: repeat;
}

.bg-repeat-x {
    background-repeat: repeat-x;
}

.bg-repeat-y {
    background-repeat: repeat-y;
}

.bg-size-cover {
    background-size: cover;
}

.bg-size-contain {
    background-size: contain;
}

.bg-size-max-h {
    background-size: auto 100%;
}

.bg-size-max-w {
    background-size: 100% auto;
}

.bg-size-max {
    background-size: 100% 100%;
}


//九宫格背景图定位
.bg-layout-1 {
    background-position: 0 0;
}
.bg-layout-2 {
    background-position: center 0;
}
.bg-layout-3 {
    background-position: 100% 0;
}
.bg-layout-4 {
    background-position: 0 center;
}
.bg-layout-5 {
    background-position: center;
}
.bg-layout-6 {
    background-position: 100% center;
}
.bg-layout-7 {
    background-position: 0 100%;
}
.bg-layout-8 {
    background-position: center 100%;
}
.bg-layout-9 {
    background-position: 100% 100%;
}


.round{
    border-radius: 50%;                 //50% 圆角

    &[lg]{                              //24px 大圆角
        border-radius: 24px;  
    }
    &[md]{                              //10px 中等圆角
        border-radius: 10px;  
    }
    &[sm]{                              //4px 小型圆角
        border-radius: 4px;  
    }
}

%no-line {
    border-width: 0;
}
.line {                                 //四周描边
    border: 1px solid;                  
}

.line-l {                               //左描边
    @extend %no-line;
    border-left: 1px solid;
}

.line-r {                               //右描边
    @extend %no-line;
    border-right: 1px solid;
}

.line-t {                               //上描边
    @extend %no-line;
    border-top: 1px solid;
}

.line-b {                               //下描边
    @extend %no-line;
    border-bottom: 1px solid;
}

.line, 
[class^="line-"],  
[class*=" line-"] {                     //虚线
    &[dashed]{
        border-style: dashed;
    }
    &[outside]{                         //外侧描边范围
        background-clip: padding-box;
    }
}


//描边粗细
$thicks: 2 4 6 8 10;
@each $thick in $thicks {
    .thick-#{$thick} {
        border-width: #{$thick}px;
    }
}


//生成三角形
%default-border {
    position: relative;
    border: 4px solid transparent;
    height: 0;
    width: 0;
    display: inline-block;
}
%v-border {
    border-top-width: 3px;
    border-bottom-width: 3px;
}
%h-border {
    border-left-width: 3px;
    border-right-width: 3px;
}
$dirs: (l left), (r right), (t top), (b bottom);
@each $dir in $dirs {
    .triangle-#{nth($dir, 1)} {
        @extend %default-border; 
        border-#{nth($dir, 2)}-color: inherit;
        @if nth($dir, 1) == l{
            @extend %v-border;
            left: 4px; 
        }@else if nth($dir, 1) == r{
            @extend %v-border;
            right: 4px;
        }@else if nth($dir, 1) == t{
            @extend %h-border;
            top: 4px;
        }@else {
            @extend %h-border;
            bottom: 4px;
        }
    }
}