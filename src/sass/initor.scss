//全局变量----------------------------------------------

//混合宏工具----------------------------------------------

//设置内边距 
@mixin set_space($side, $val:0, $dir:all){
    @if $dir == all{
        padding: $val;
    }@else if $dir == v{ //vertical
        padding: {
            top: $val;
            bottom: $val;
        }
    }@else if $dir == h{ //horizontal
        padding: {
            left: $val;
            right: $val;
        }
    }@else{
        #{$side}-#{$dir}: $val;
    }
}

//自动化生成全局样式类----------------------------------------------

//生成内、外边距
@mixin auto_gen_space_class(){ 
    $dirs: (-t top), (-r right), (-l left), (-b bottom), (-v v), (-h h), ("" all); 
    $vals: (0 0), (d5 .5), (1 1), (1d5 1.5), (2 2), (2d5 2.5), (3 3), (3d5 3.5), (4 4), (5 5), (6 6), (7 7), (8 8), (9 9), (10 10);

    @for $i from 1 to length($dirs) + 1{
        $dir: nth($dirs, $i);
        @each $val in $vals{
            .pad#{nth($dir, 1)}-#{nth($val, 1)} {
                @include set_space(padding, #{nth($val, 2)}rem, nth($dir, 2));
            }
            .mrg#{nth($dir, 1)}-#{nth($val, 1)} {
                @include set_space(margin, #{nth($val, 2)}rem, nth($dir, 2));
            }
        }
    }
} 

//生成倍数字号
@mixin auto_gen_font_size_class(){ 
    @for $i from 0 to 6{
        
        //处理缩小字号
        @if $i == 0 {
            @for $i from 1 to 10{
                .fsize-d#{$i} {
                    font-size: #{$i / 10}em;   
                }        
            }
        } @else if $i == 1 {
            @for $i from 1 to 10{ 
                .fsize-1d#{$i} {
                    font-size: #{1 + $i / 10}em;
                }        
            }
        } @else if $i > 1 {
            .fsize-#{$i} {
                font-size: #{$i}em;
            }
            .fsize-#{$i}d5 {
                font-size: #{$i + 0.5}em;
            }
        }
    }
} 

//生成不同尺寸宽度及高度
@mixin auto_size(){
    .w-0 {
        width: 0;
    }
    .h-0 {
        height: 0;
    }
    .w-d5 {
        width: .5rem;
    }
    .h-d5 {
        height: .5rem;
    }
    @for $i from 1 to 11{
        .w-#{$i} {
            width: #{$i}rem;
        }
        .h-#{$i} {
            height: #{$i}rem;
        }
    }
    $vals: (15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100);
    @each $val in $vals{
        .w-#{$val} {
            width: #{$val}rem;
        }
        .h-#{$val} {
            height: #{$val}rem;
        }
    }
}

//生成 z 轴层级
@mixin auto_gen_z_index(){ 
    .z-1 {
        z-index: -1;
    }
    @for $i from 0 to 11{
        .z#{$i} {
            z-index: $i;
        }
    }
}

//生成放缩比率
@mixin auto_gen_scale(){
    @for $i from 0 to 10{
        .scale-d#{$i} {
            transform: scale($i / 10);
        }
    }
    @for $i from 1 to 10{
        .scale-1d#{$i} {
            transform: scale($i / 10 + 1);
        }
    }
    @for $i from 2 to 11{
        .scale-#{$i} {
            transform: scale($i);
        }
    }
}

//生成微调位移
@mixin auto_gen_offset(){
    $dirs: (l left), (r right), (t top), (b bottom); 
    @for $i from 0 to 11{
        @each $dir in $dirs{
            @if $i == 0{
                .#{nth($dir, 1)}#{$i} {
                    #{nth($dir, 2)}: #{$i}px;
                }
            }@else{
                .#{nth($dir, 1)}#{$i} {
                    #{nth($dir, 2)}: #{$i}px;
                }
                .#{nth($dir, 1)}-#{$i} {
                    #{nth($dir, 2)}: -#{$i}px;
                }
            }
        }
    }
}